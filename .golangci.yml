version: "2"

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly

issues:
  max-same-issues: 50

formatters:
  enable:
    - goimports
    - golines
  settings:
    goimports:
      local-prefixes:
        - github.com/my/project
    golines:
      max-len: 120

linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - copyloopvar
    - cyclop
    - depguard
    - dupl
    - durationcheck
    - embeddedstructfieldcheck
    - errcheck
    - errname
    - errorlint
    - exhaustive
    - exptostd
    - fatcontext
    - forbidigo
    - funcorder
    - funlen
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gomoddirectives
    - goprintffuncname
    - gosec
    - govet
    - iface
    - ineffassign
    - intrange
    - loggercheck
    - makezero
    - mirror
    - mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - perfsprint
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - testableexamples
    - testifylint
    - testpackage
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - wastedassign
    - whitespace

    # Newly enabled for crypto-checkout
    - wrapcheck
    - tagalign
    - importas
    - prealloc
    - paralleltest
    - containedctx
    - errchkjson

  settings:
    cyclop:
      max-complexity: 20
      package-average: 10.0

    depguard:
      rules:
        "deprecated":
          files: ["$all"]
          deny:
            - pkg: github.com/golang/protobuf
              desc: Use google.golang.org/protobuf instead
            - pkg: github.com/satori/go.uuid
              desc: Use github.com/google/uuid instead
            - pkg: github.com/gofrs/uuid$
              desc: Use github.com/gofrs/uuid/v5 or later
        "non-test files":
          files: ["!$test"]
          deny:
            - pkg: math/rand$
              desc: Use math/rand/v2 instead
        "non-main files":
          files: ["!**/main.go"]
          deny:
            - pkg: log$
              desc: Use log/slog instead

    embeddedstructfieldcheck:
      forbid-mutex: true

    errcheck:
      check-type-assertions: true

    exhaustive:
      check: [switch, map]

    funcorder:
      struct-method: false

    funlen:
      lines: 80
      statements: 40

    gochecksumtype:
      default-signifies-exhaustive: false

    gocognit:
      min-complexity: 15

    gocritic:
      settings:
        captLocal:
          paramsOnly: false
        underef:
          skipRecvDeref: false

    govet:
      enable-all: true
      disable:
        - fieldalignment
      settings:
        shadow:
          strict: true

    mnd:
      ignored-functions:
        - args.Error
        - flag.Arg
        - flag.Duration.*
        - flag.Float.*
        - flag.Int.*
        - flag.Uint.*
        - os.Chmod
        - os.Mkdir.*
        - os.OpenFile
        - os.WriteFile
        - prometheus.ExponentialBuckets.*
        - prometheus.LinearBuckets

    nakedret:
      max-func-lines: 0

    nolintlint:
      allow-no-explanation: [funlen, gocognit, golines]
      require-explanation: true
      require-specific: true

    perfsprint:
      strconcat: false

    reassign:
      patterns: [".*"]

    rowserrcheck:
      packages:
        - github.com/jmoiron/sqlx

    sloglint:
      no-global: all
      context: scope

    staticcheck:
      checks:
        - all
        - -ST1000
        - -ST1016
        - -QF1008

    usetesting:
      os-temp-dir: true

  exclusions:
    warn-unused: true
    presets:
      - std-error-handling
      - common-false-positives
    rules:
      - source: "TODO"
        linters: [godot]
      - text: "should have a package comment"
        linters: [revive]
      - text: 'exported \S+ \S+ should have comment( \(or a comment on this block\))? or be unexported'
        linters: [revive]
      - text: 'package comment should be of the form ".+"'
        source: "// ?(nolint|TODO)"
        linters: [revive]
      - text: 'comment on exported \S+ \S+ should be of the form ".+"'
        source: "// ?(nolint|TODO)"
        linters: [revive, staticcheck]
      - text: "Module is a global variable"
        linters: [gochecknoglobals]
      - path: '_test\.go'
        linters:
          - bodyclose
          - godot
          - dupl
          - errcheck
          - funlen
          - goconst
          - gosec
          - noctx
          - wrapcheck
      - path: "test/e2e"
        linters:
          - paralleltest

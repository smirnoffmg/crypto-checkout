{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A comprehensive cryptocurrency payment processing API for merchants and customers.",
        "title": "Crypto Checkout API",
        "termsOfService": "https://crypto-checkout.com/terms",
        "contact": {
            "name": "API Support",
            "url": "https://crypto-checkout.com/support",
            "email": "support@crypto-checkout.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/auth/token": {
            "post": {
                "description": "Generate a JWT access token using API key authentication for accessing protected endpoints",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate JWT access token",
                "parameters": [
                    {
                        "description": "Token generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token generated successfully",
                        "schema": {
                            "$ref": "#/definitions/web.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invoices": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new invoice for cryptocurrency payment processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a new invoice",
                "parameters": [
                    {
                        "description": "Invoice creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web.CreateInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Invoice created successfully",
                        "schema": {
                            "$ref": "#/definitions/web.CreateInvoiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve detailed information about a specific invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoice details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/web.CreateInvoiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid invoice ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid API key",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/public/invoice/{id}": {
            "get": {
                "description": "Retrieve public invoice information for customers (no authentication required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public API"
                ],
                "summary": "Get public invoice data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice data retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/web.PublicInvoiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid invoice ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/public/invoice/{id}/events": {
            "get": {
                "description": "Stream real-time invoice events using Server-Sent Events (no authentication required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Public API"
                ],
                "summary": "Get invoice events stream",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event stream started",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid invoice ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/public/invoice/{id}/status": {
            "get": {
                "description": "Get the current status of an invoice (no authentication required)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public API"
                ],
                "summary": "Get invoice status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice status retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/web.PublicInvoiceStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid invoice ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/invoice/{id}/qr": {
            "get": {
                "description": "Generate and return a QR code image for invoice payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoice QR code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code image",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid invoice ID",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/web.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.CreateInvoiceRequest": {
            "type": "object",
            "required": [
                "items",
                "tax_rate"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/web.InvoiceItemRequest"
                    }
                },
                "tax_rate": {
                    "type": "string"
                }
            }
        },
        "web.CreateInvoiceResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_url": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_url": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.InvoiceItemResponse"
                    }
                },
                "payment_address": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subtotal": {
                    "type": "string"
                },
                "tax_amount": {
                    "type": "string"
                },
                "tax_rate": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                },
                "usdt_amount": {
                    "description": "API.md required fields",
                    "type": "string"
                }
            }
        },
        "web.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "web.InvoiceItemRequest": {
            "type": "object",
            "required": [
                "description",
                "quantity",
                "unit_price"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "quantity": {
                    "type": "string"
                },
                "unit_price": {
                    "type": "string"
                }
            }
        },
        "web.InvoiceItemResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "quantity": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                },
                "unit_price": {
                    "type": "string"
                }
            }
        },
        "web.PaymentProgressResponse": {
            "type": "object",
            "properties": {
                "percent": {
                    "type": "number"
                },
                "received": {
                    "type": "string"
                },
                "remaining": {
                    "type": "string"
                },
                "required": {
                    "type": "string"
                }
            }
        },
        "web.PublicInvoiceResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cancel_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "crypto_currency": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.InvoiceItemResponse"
                    }
                },
                "paid_at": {
                    "type": "string"
                },
                "payment_progress": {
                    "$ref": "#/definitions/web.PaymentProgressResponse"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.PublicPaymentResponse"
                    }
                },
                "return_url": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subtotal": {
                    "type": "string"
                },
                "tax_amount": {
                    "type": "string"
                },
                "time_remaining": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "total": {
                    "type": "string"
                },
                "usdt_amount": {
                    "type": "string"
                }
            }
        },
        "web.PublicInvoiceStatusResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "web.PublicPaymentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "confirmations": {
                    "type": "integer"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "web.TokenRequest": {
            "type": "object",
            "required": [
                "api_key",
                "expires_in",
                "grant_type",
                "scope"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "expires_in": {
                    "description": "1 second to 24 hours",
                    "type": "integer",
                    "maximum": 86400,
                    "minimum": 1
                },
                "grant_type": {
                    "type": "string"
                },
                "scope": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "web.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token_type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key authentication. Use format: Bearer sk_live_xxx or Bearer sk_test_xxx",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BearerAuth": {
            "description": "JWT Bearer token authentication. Use format: Bearer \u003cjwt_token\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}